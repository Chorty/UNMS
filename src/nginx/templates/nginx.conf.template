# user defines the user that will own and run the Nginx server
user unms nogroup;
# 'user nobody nobody;' for systems with 'nobody' as a group instead

# Reference: http://docs.gunicorn.org/en/stable/deploy.html
# worker_processes defines the number of worker processes.
# A recommended value for this parameter is the number of cores that are being used by your server.
worker_processes ${WORKER_PROCESSES};

error_log /dev/stderr;

# Make env variables available to shell scripts executed through lua module.
env SSL_CERT;
env SSL_CERT_KEY;
env SSL_CERT_CA;
env HTTP_PORT;
env HTTPS_PORT;
env WS_PORT;
env SUSPEND_PORT;
env UNMS_HOST;
env UNMS_HTTP_PORT;
env UNMS_WS_PORT;
env UNMS_WS_SHELL_PORT;
env UNMS_WS_API_PORT;
env UCRM_HOST;
env UCRM_HTTP_PORT;
env UCRM_SUSPEND_PORT;
env PUBLIC_HTTPS_PORT;
env WORKER_PROCESSES;
env SECURE_LINK_SECRET;

events {
  worker_connections 8192; # increase if you have lots of clients
  accept_mutex on; # set to 'on' if nginx worker_processes > 1
}

http {
  # we must define resolver to be able to resolve container names line 'unms' and 'ucrm' in proxy_pass directives
  resolver 127.0.0.11;
  include mime.types;
  # fallback in case we can't determine a type
  default_type application/octet-stream;
  access_log off;
  sendfile on;
  server_tokens off;

  set_real_ip_from  ${LOCAL_NETWORK};
  real_ip_header    X-Forwarded-For;
  real_ip_recursive on;

  # limit device connection rate
  map $http_upgrade $limit {
    default device_connecting;
    ""      "";
  }
  limit_req_zone $limit zone=throttle:1m rate=50r/s;
  limit_req zone=throttle burst=500;

  map $http_upgrade $connection_upgrade {
    default upgrade;
    ""      close;
  }

  server {
    listen ${HTTP_PORT} default;

    location /.well-known/acme-challenge {
      root /www;
    }

    location / {
      return 301 https://$host:${PUBLIC_HTTPS_PORT}$request_uri;
    }
  }

  include /etc/nginx/conf.d/*.conf;
}
